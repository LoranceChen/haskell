
==================== FINAL INTERFACE ====================
2016-06-04 12:37:39.961072 UTC

interface hellw_3s6tG2TYF7fIYayAZNLhNw:Lib 7103
  interface hash: b711d2f7fa6da830e7c57ad1f83465f6
  ABI hash: 1320885d437a0a6ecb38226c5f3ccb69
  export-list hash: 1a37a96c875e608cf96bf504fe440632
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 161d16d3422b284d74d35a691dea01b8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.isEven
  Lib.isOdd
  Lib.myAdd
  Lib.someFunc
module dependencies:
package dependencies: acme-missiles-0.3@acmem_DAH1oLSTISzIx4Z642Z9EI
                      base-4.8.2.0* ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  acme-missiles-0.3@acmem_DAH1oLSTISzIx4Z642Z9EI:Acme.Missiles d97bac86f4f5b2ee5cbd02c8ad9330d6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
cb4eee98bee700534d7110f807021087
  $wisOdd :: GHC.Prim.Int# -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
56978d0231c0a56ffb5075e5754cdfac
  isEven :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ j :: GHC.Types.Int ->
                 case j of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> Lib.isOdd (GHC.Types.I# (GHC.Prim.-# wild1 1))
                   0 -> GHC.Types.False } }) -}
571599cf376a96756cb99fe24ebf9858
  isOdd :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 -> Lib.$wisOdd ww1 }) -}
9f4a8c864c2c12ae606bfc5fc48cc483
  myAdd :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True) GHC.Num.$fNumInt_$c+ -}
3545ee40198033e20ba1a5c68c1599d3
  someFunc :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Acme.Missiles.launchMissiles1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

